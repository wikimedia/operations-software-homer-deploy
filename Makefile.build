# Specialized makefile for building the deployment artifacts
# Global build dir
BUILD_DIR = $(CURDIR)/build
# Directory where the wheels are built
WHEELS_DIR = $(BUILD_DIR)/wheels

IMG_BASENAME := 'docker-registry.wikimedia.org/python3-build'
STRETCH_ARTIFACTS = $(WHEELS_DIR)/stretch/artifacts.tar.gz

### Build-related tasks ###
# task all
# clean the build environment, generate the new frozen requirements and recreate the wheels.
all: clean freeze artifacts

# task artifacts
# Build the wheels for all or a specific DISTRO inside a container, and get the tar to the right place
artifacts: $(STRETCH_ARTIFACTS)
	cp $(STRETCH_ARTIFACTS) $(CURDIR)/artifacts/artifacts.stretch.tar.gz

$(STRETCH_ARTIFACTS): .docker_built
	mkdir -p $(WHEELS_DIR)/stretch
	docker run --rm -v $(CURDIR):/deploy:ro -v $(WHEELS_DIR)/stretch:/wheels:rw -v /etc/group:/etc/group:ro \
		-v /etc/passwd:/etc/passwd:ro --user=$(UID) homer-build:local

# task clean[-DISTRO]
# clean docker artifacts for one distro
clean:
	- rm -rf $(WHEELS_DIR)
	- rm -rf .docker_built

freeze: .docker_built
	docker run --rm -v $(CURDIR):/deploy:rw -v /etc/group:/etc/group:ro \
		-v /etc/passwd:/etc/passwd:ro --user=$(UID) -w /deploy/src \
		homer-build:local /bin/freeze

.docker_built: Dockerfile.build freeze_requirements.sh
	docker pull $(IMG_BASENAME)-stretch:latest
	docker build -f Dockerfile.build -t homer-build:local .
	@touch $@

.PHONY: all artifacts clean freeze
